//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Controls/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Fishing.IO
{
    public partial class @Controls : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @Controls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Fishing Level Inputs"",
            ""id"": ""eced5a37-8d50-46d2-afd4-24c1ed96d026"",
            ""actions"": [
                {
                    ""name"": ""StartCast"",
                    ""type"": ""Button"",
                    ""id"": ""7d2511f5-c3ff-4559-8ae0-9114a52b1e0d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StartReeling"",
                    ""type"": ""Button"",
                    ""id"": ""b41d4aa3-583a-4dab-b512-39e727e64e59"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SetPower"",
                    ""type"": ""Button"",
                    ""id"": ""30c90024-f607-41e2-b7b4-9d7f48c3e3f2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cast"",
                    ""type"": ""Button"",
                    ""id"": ""f79966fa-e514-4759-97b8-0fa343823b89"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StopReeling"",
                    ""type"": ""Button"",
                    ""id"": ""33de9647-a706-412e-a3dc-fbcab58eb29e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraZoom"",
                    ""type"": ""Value"",
                    ""id"": ""e1aca3f9-ca09-41ba-a94e-bb884198375b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": ""Clamp(min=-1,max=1),Invert"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BucketMenu"",
                    ""type"": ""Button"",
                    ""id"": ""5e40cc0d-9731-4085-a4d1-744283b33014"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BackpackMenu"",
                    ""type"": ""Button"",
                    ""id"": ""4a5409f5-c1a6-4921-adee-01d69f7276dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveHook"",
                    ""type"": ""Value"",
                    ""id"": ""59ab2e84-0cd5-4730-8dc4-d75b931793f0"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": ""Normalize(min=-1,max=1)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f8720986-69b8-4c6f-be5c-c8a9d33cf20a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartCast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac6904cf-bbf9-434f-9317-624ba65c27c9"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartCast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ba72d38-0ca3-47e6-a21f-2851e3c1fb79"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press,Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartReeling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88d9d7ff-d084-4ff6-9d8b-7df5704809b1"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press,Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartReeling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b716f31-18af-482a-9e9c-b2b08358f4e6"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SetPower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee6ab9df-9fcc-475d-baf5-3b3f37ac728b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SetPower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10a79d2e-0c44-445b-bd9a-effc5a906a1b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0da98a98-1ebf-4f6f-91d3-63808ca9e77c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""110d0017-ddc0-4d2e-87d2-7ddb14e27d49"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopReeling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""759ace81-d83b-45da-92de-635f599e2214"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopReeling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4474011-8935-46b8-9708-c4a813b21250"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d178c575-2204-414b-aeea-98bc3984479c"",
                    ""path"": ""<Gamepad>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""CameraZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""369044f9-cbb8-4416-8591-7f59f37c069d"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BucketMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df57e95f-e315-4c0d-b095-36579a28e9c8"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BucketMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""039067e6-c9e6-4dad-bf34-c538ac4396ff"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackpackMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b497f99b-fdf9-4697-a116-cd6095b9fa10"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackpackMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard Arrows"",
                    ""id"": ""5dbb9fe5-b72d-46c9-be4f-f6fe5212b016"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveHook"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a8f03c58-08f1-43c5-86e8-02d32e883ccf"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveHook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8f88eec3-8f7d-4ad0-b998-875bd087b8ae"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveHook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard WASD"",
                    ""id"": ""1da1931a-4201-4abd-86ee-91f0b0f3170d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveHook"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""af4ef613-69af-486f-b489-a72ba24d833f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveHook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""9667d184-456c-4f64-82a5-82c0eb6fa659"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveHook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Controller"",
                    ""id"": ""cc7ecde2-3f57-448e-8c6a-7b980830baa4"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone(max=1)"",
                    ""groups"": """",
                    ""action"": ""MoveHook"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""94f03307-d060-4960-9829-5636f140edf8"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveHook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""7dcd1e67-5fe7-477a-9f5f-bec1459192ea"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveHook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Title Menu Input"",
            ""id"": ""a70470da-c237-41d3-96d3-bef5eb11d670"",
            ""actions"": [
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""461afdfa-9d71-4532-b198-7b28cb0c5ebd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Navigate"",
                    ""type"": ""Value"",
                    ""id"": ""e24c8a12-9b37-4dca-8278-8a09b9b1ec20"",
                    ""expectedControlType"": ""Dpad"",
                    ""processors"": ""InvertVector2(invertX=false)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseMovement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b452a90d-b3b0-45de-91a1-ed484e143a37"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""26b97ff5-f443-4688-ad3b-53dbf1b1e946"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tabs"",
                    ""type"": ""Button"",
                    ""id"": ""30c9b3cb-764c-4ed1-a61a-2318b2d15258"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ce943f2c-c634-4acc-b658-c86926a0013d"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61a846ff-de02-4d62-a941-1752f61eeba9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c9caa15-df85-4bc5-8712-1e099d5a1123"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard Arrow Keys"",
                    ""id"": ""1f0817c9-1245-4714-be68-345f6cf60826"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0ad8f353-fb3f-4c87-9274-9c557cebafc3"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""83de1f95-e259-4716-a928-a676d4964cbb"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""32821265-d2af-43a4-a523-09e5f954f5b6"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""55d067f1-9ed4-48ab-af15-9d0c6c8a9983"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad D-Pad"",
                    ""id"": ""8452fe66-75b9-4232-b2a1-08dfb0fe7d5a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3e722b97-e16e-45bf-adef-d8ccaefcf809"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0b8d8ee6-432c-4f3d-9668-2d9c8063081e"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3b12db28-ea04-42c8-b880-95157e4e19e1"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3007ab5c-1413-429c-ac0f-037436fb9b15"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad Thumbstick"",
                    ""id"": ""1f67bfce-1701-4434-b73b-6488da5de69d"",
                    ""path"": ""2DVector"",
                    ""interactions"": ""Press"",
                    ""processors"": ""StickDeadzone(max=1)"",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""33c1b7d2-580e-41fe-bb17-fb19d716ce9e"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3accdb3b-179a-4e19-8e65-6914b731faf4"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""391312e7-b1c8-45af-8e04-53989a60f398"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ed9a8b99-fde4-4896-92a9-b4a25b31928b"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3a4932f5-0ea9-47ec-9f44-cdb625a3207b"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3095fb4-e057-41be-8013-e36ae3a2a375"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d758ae21-e221-457c-ac2b-0d9f2984a7a8"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf734770-d013-4da8-88c5-f8264bb31480"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tabs"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c5de8ab-164a-44f2-9364-985fa4c1d9db"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tabs"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Store Menu Inputs"",
            ""id"": ""d91ea200-66dc-4d25-94a3-1744a1327776"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""af031b42-faeb-443f-8bea-2efa5f7f9d81"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""81d3c10b-0a2e-4ffd-ba63-144df0032e42"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Pause Menu Inputs"",
            ""id"": ""956d769a-8852-49b3-995b-619ec7e10315"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""ac534810-5896-4af8-9b7e-6afef33c1d81"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e79c5ac0-c7e8-4abe-ab87-c6faa724950f"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Fishing Level Inputs
            m_FishingLevelInputs = asset.FindActionMap("Fishing Level Inputs", throwIfNotFound: true);
            m_FishingLevelInputs_StartCast = m_FishingLevelInputs.FindAction("StartCast", throwIfNotFound: true);
            m_FishingLevelInputs_StartReeling = m_FishingLevelInputs.FindAction("StartReeling", throwIfNotFound: true);
            m_FishingLevelInputs_SetPower = m_FishingLevelInputs.FindAction("SetPower", throwIfNotFound: true);
            m_FishingLevelInputs_Cast = m_FishingLevelInputs.FindAction("Cast", throwIfNotFound: true);
            m_FishingLevelInputs_StopReeling = m_FishingLevelInputs.FindAction("StopReeling", throwIfNotFound: true);
            m_FishingLevelInputs_CameraZoom = m_FishingLevelInputs.FindAction("CameraZoom", throwIfNotFound: true);
            m_FishingLevelInputs_BucketMenu = m_FishingLevelInputs.FindAction("BucketMenu", throwIfNotFound: true);
            m_FishingLevelInputs_BackpackMenu = m_FishingLevelInputs.FindAction("BackpackMenu", throwIfNotFound: true);
            m_FishingLevelInputs_MoveHook = m_FishingLevelInputs.FindAction("MoveHook", throwIfNotFound: true);
            // Title Menu Input
            m_TitleMenuInput = asset.FindActionMap("Title Menu Input", throwIfNotFound: true);
            m_TitleMenuInput_Select = m_TitleMenuInput.FindAction("Select", throwIfNotFound: true);
            m_TitleMenuInput_Navigate = m_TitleMenuInput.FindAction("Navigate", throwIfNotFound: true);
            m_TitleMenuInput_MouseMovement = m_TitleMenuInput.FindAction("MouseMovement", throwIfNotFound: true);
            m_TitleMenuInput_Back = m_TitleMenuInput.FindAction("Back", throwIfNotFound: true);
            m_TitleMenuInput_Tabs = m_TitleMenuInput.FindAction("Tabs", throwIfNotFound: true);
            // Store Menu Inputs
            m_StoreMenuInputs = asset.FindActionMap("Store Menu Inputs", throwIfNotFound: true);
            m_StoreMenuInputs_Newaction = m_StoreMenuInputs.FindAction("New action", throwIfNotFound: true);
            // Pause Menu Inputs
            m_PauseMenuInputs = asset.FindActionMap("Pause Menu Inputs", throwIfNotFound: true);
            m_PauseMenuInputs_Newaction = m_PauseMenuInputs.FindAction("New action", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Fishing Level Inputs
        private readonly InputActionMap m_FishingLevelInputs;
        private IFishingLevelInputsActions m_FishingLevelInputsActionsCallbackInterface;
        private readonly InputAction m_FishingLevelInputs_StartCast;
        private readonly InputAction m_FishingLevelInputs_StartReeling;
        private readonly InputAction m_FishingLevelInputs_SetPower;
        private readonly InputAction m_FishingLevelInputs_Cast;
        private readonly InputAction m_FishingLevelInputs_StopReeling;
        private readonly InputAction m_FishingLevelInputs_CameraZoom;
        private readonly InputAction m_FishingLevelInputs_BucketMenu;
        private readonly InputAction m_FishingLevelInputs_BackpackMenu;
        private readonly InputAction m_FishingLevelInputs_MoveHook;
        public struct FishingLevelInputsActions
        {
            private @Controls m_Wrapper;
            public FishingLevelInputsActions(@Controls wrapper) { m_Wrapper = wrapper; }
            public InputAction @StartCast => m_Wrapper.m_FishingLevelInputs_StartCast;
            public InputAction @StartReeling => m_Wrapper.m_FishingLevelInputs_StartReeling;
            public InputAction @SetPower => m_Wrapper.m_FishingLevelInputs_SetPower;
            public InputAction @Cast => m_Wrapper.m_FishingLevelInputs_Cast;
            public InputAction @StopReeling => m_Wrapper.m_FishingLevelInputs_StopReeling;
            public InputAction @CameraZoom => m_Wrapper.m_FishingLevelInputs_CameraZoom;
            public InputAction @BucketMenu => m_Wrapper.m_FishingLevelInputs_BucketMenu;
            public InputAction @BackpackMenu => m_Wrapper.m_FishingLevelInputs_BackpackMenu;
            public InputAction @MoveHook => m_Wrapper.m_FishingLevelInputs_MoveHook;
            public InputActionMap Get() { return m_Wrapper.m_FishingLevelInputs; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(FishingLevelInputsActions set) { return set.Get(); }
            public void SetCallbacks(IFishingLevelInputsActions instance)
            {
                if (m_Wrapper.m_FishingLevelInputsActionsCallbackInterface != null)
                {
                    @StartCast.started -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnStartCast;
                    @StartCast.performed -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnStartCast;
                    @StartCast.canceled -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnStartCast;
                    @StartReeling.started -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnStartReeling;
                    @StartReeling.performed -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnStartReeling;
                    @StartReeling.canceled -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnStartReeling;
                    @SetPower.started -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnSetPower;
                    @SetPower.performed -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnSetPower;
                    @SetPower.canceled -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnSetPower;
                    @Cast.started -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnCast;
                    @Cast.performed -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnCast;
                    @Cast.canceled -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnCast;
                    @StopReeling.started -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnStopReeling;
                    @StopReeling.performed -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnStopReeling;
                    @StopReeling.canceled -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnStopReeling;
                    @CameraZoom.started -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnCameraZoom;
                    @CameraZoom.performed -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnCameraZoom;
                    @CameraZoom.canceled -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnCameraZoom;
                    @BucketMenu.started -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnBucketMenu;
                    @BucketMenu.performed -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnBucketMenu;
                    @BucketMenu.canceled -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnBucketMenu;
                    @BackpackMenu.started -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnBackpackMenu;
                    @BackpackMenu.performed -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnBackpackMenu;
                    @BackpackMenu.canceled -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnBackpackMenu;
                    @MoveHook.started -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnMoveHook;
                    @MoveHook.performed -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnMoveHook;
                    @MoveHook.canceled -= m_Wrapper.m_FishingLevelInputsActionsCallbackInterface.OnMoveHook;
                }
                m_Wrapper.m_FishingLevelInputsActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @StartCast.started += instance.OnStartCast;
                    @StartCast.performed += instance.OnStartCast;
                    @StartCast.canceled += instance.OnStartCast;
                    @StartReeling.started += instance.OnStartReeling;
                    @StartReeling.performed += instance.OnStartReeling;
                    @StartReeling.canceled += instance.OnStartReeling;
                    @SetPower.started += instance.OnSetPower;
                    @SetPower.performed += instance.OnSetPower;
                    @SetPower.canceled += instance.OnSetPower;
                    @Cast.started += instance.OnCast;
                    @Cast.performed += instance.OnCast;
                    @Cast.canceled += instance.OnCast;
                    @StopReeling.started += instance.OnStopReeling;
                    @StopReeling.performed += instance.OnStopReeling;
                    @StopReeling.canceled += instance.OnStopReeling;
                    @CameraZoom.started += instance.OnCameraZoom;
                    @CameraZoom.performed += instance.OnCameraZoom;
                    @CameraZoom.canceled += instance.OnCameraZoom;
                    @BucketMenu.started += instance.OnBucketMenu;
                    @BucketMenu.performed += instance.OnBucketMenu;
                    @BucketMenu.canceled += instance.OnBucketMenu;
                    @BackpackMenu.started += instance.OnBackpackMenu;
                    @BackpackMenu.performed += instance.OnBackpackMenu;
                    @BackpackMenu.canceled += instance.OnBackpackMenu;
                    @MoveHook.started += instance.OnMoveHook;
                    @MoveHook.performed += instance.OnMoveHook;
                    @MoveHook.canceled += instance.OnMoveHook;
                }
            }
        }
        public FishingLevelInputsActions @FishingLevelInputs => new FishingLevelInputsActions(this);

        // Title Menu Input
        private readonly InputActionMap m_TitleMenuInput;
        private ITitleMenuInputActions m_TitleMenuInputActionsCallbackInterface;
        private readonly InputAction m_TitleMenuInput_Select;
        private readonly InputAction m_TitleMenuInput_Navigate;
        private readonly InputAction m_TitleMenuInput_MouseMovement;
        private readonly InputAction m_TitleMenuInput_Back;
        private readonly InputAction m_TitleMenuInput_Tabs;
        public struct TitleMenuInputActions
        {
            private @Controls m_Wrapper;
            public TitleMenuInputActions(@Controls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Select => m_Wrapper.m_TitleMenuInput_Select;
            public InputAction @Navigate => m_Wrapper.m_TitleMenuInput_Navigate;
            public InputAction @MouseMovement => m_Wrapper.m_TitleMenuInput_MouseMovement;
            public InputAction @Back => m_Wrapper.m_TitleMenuInput_Back;
            public InputAction @Tabs => m_Wrapper.m_TitleMenuInput_Tabs;
            public InputActionMap Get() { return m_Wrapper.m_TitleMenuInput; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(TitleMenuInputActions set) { return set.Get(); }
            public void SetCallbacks(ITitleMenuInputActions instance)
            {
                if (m_Wrapper.m_TitleMenuInputActionsCallbackInterface != null)
                {
                    @Select.started -= m_Wrapper.m_TitleMenuInputActionsCallbackInterface.OnSelect;
                    @Select.performed -= m_Wrapper.m_TitleMenuInputActionsCallbackInterface.OnSelect;
                    @Select.canceled -= m_Wrapper.m_TitleMenuInputActionsCallbackInterface.OnSelect;
                    @Navigate.started -= m_Wrapper.m_TitleMenuInputActionsCallbackInterface.OnNavigate;
                    @Navigate.performed -= m_Wrapper.m_TitleMenuInputActionsCallbackInterface.OnNavigate;
                    @Navigate.canceled -= m_Wrapper.m_TitleMenuInputActionsCallbackInterface.OnNavigate;
                    @MouseMovement.started -= m_Wrapper.m_TitleMenuInputActionsCallbackInterface.OnMouseMovement;
                    @MouseMovement.performed -= m_Wrapper.m_TitleMenuInputActionsCallbackInterface.OnMouseMovement;
                    @MouseMovement.canceled -= m_Wrapper.m_TitleMenuInputActionsCallbackInterface.OnMouseMovement;
                    @Back.started -= m_Wrapper.m_TitleMenuInputActionsCallbackInterface.OnBack;
                    @Back.performed -= m_Wrapper.m_TitleMenuInputActionsCallbackInterface.OnBack;
                    @Back.canceled -= m_Wrapper.m_TitleMenuInputActionsCallbackInterface.OnBack;
                    @Tabs.started -= m_Wrapper.m_TitleMenuInputActionsCallbackInterface.OnTabs;
                    @Tabs.performed -= m_Wrapper.m_TitleMenuInputActionsCallbackInterface.OnTabs;
                    @Tabs.canceled -= m_Wrapper.m_TitleMenuInputActionsCallbackInterface.OnTabs;
                }
                m_Wrapper.m_TitleMenuInputActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Select.started += instance.OnSelect;
                    @Select.performed += instance.OnSelect;
                    @Select.canceled += instance.OnSelect;
                    @Navigate.started += instance.OnNavigate;
                    @Navigate.performed += instance.OnNavigate;
                    @Navigate.canceled += instance.OnNavigate;
                    @MouseMovement.started += instance.OnMouseMovement;
                    @MouseMovement.performed += instance.OnMouseMovement;
                    @MouseMovement.canceled += instance.OnMouseMovement;
                    @Back.started += instance.OnBack;
                    @Back.performed += instance.OnBack;
                    @Back.canceled += instance.OnBack;
                    @Tabs.started += instance.OnTabs;
                    @Tabs.performed += instance.OnTabs;
                    @Tabs.canceled += instance.OnTabs;
                }
            }
        }
        public TitleMenuInputActions @TitleMenuInput => new TitleMenuInputActions(this);

        // Store Menu Inputs
        private readonly InputActionMap m_StoreMenuInputs;
        private IStoreMenuInputsActions m_StoreMenuInputsActionsCallbackInterface;
        private readonly InputAction m_StoreMenuInputs_Newaction;
        public struct StoreMenuInputsActions
        {
            private @Controls m_Wrapper;
            public StoreMenuInputsActions(@Controls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Newaction => m_Wrapper.m_StoreMenuInputs_Newaction;
            public InputActionMap Get() { return m_Wrapper.m_StoreMenuInputs; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(StoreMenuInputsActions set) { return set.Get(); }
            public void SetCallbacks(IStoreMenuInputsActions instance)
            {
                if (m_Wrapper.m_StoreMenuInputsActionsCallbackInterface != null)
                {
                    @Newaction.started -= m_Wrapper.m_StoreMenuInputsActionsCallbackInterface.OnNewaction;
                    @Newaction.performed -= m_Wrapper.m_StoreMenuInputsActionsCallbackInterface.OnNewaction;
                    @Newaction.canceled -= m_Wrapper.m_StoreMenuInputsActionsCallbackInterface.OnNewaction;
                }
                m_Wrapper.m_StoreMenuInputsActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Newaction.started += instance.OnNewaction;
                    @Newaction.performed += instance.OnNewaction;
                    @Newaction.canceled += instance.OnNewaction;
                }
            }
        }
        public StoreMenuInputsActions @StoreMenuInputs => new StoreMenuInputsActions(this);

        // Pause Menu Inputs
        private readonly InputActionMap m_PauseMenuInputs;
        private IPauseMenuInputsActions m_PauseMenuInputsActionsCallbackInterface;
        private readonly InputAction m_PauseMenuInputs_Newaction;
        public struct PauseMenuInputsActions
        {
            private @Controls m_Wrapper;
            public PauseMenuInputsActions(@Controls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Newaction => m_Wrapper.m_PauseMenuInputs_Newaction;
            public InputActionMap Get() { return m_Wrapper.m_PauseMenuInputs; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PauseMenuInputsActions set) { return set.Get(); }
            public void SetCallbacks(IPauseMenuInputsActions instance)
            {
                if (m_Wrapper.m_PauseMenuInputsActionsCallbackInterface != null)
                {
                    @Newaction.started -= m_Wrapper.m_PauseMenuInputsActionsCallbackInterface.OnNewaction;
                    @Newaction.performed -= m_Wrapper.m_PauseMenuInputsActionsCallbackInterface.OnNewaction;
                    @Newaction.canceled -= m_Wrapper.m_PauseMenuInputsActionsCallbackInterface.OnNewaction;
                }
                m_Wrapper.m_PauseMenuInputsActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Newaction.started += instance.OnNewaction;
                    @Newaction.performed += instance.OnNewaction;
                    @Newaction.canceled += instance.OnNewaction;
                }
            }
        }
        public PauseMenuInputsActions @PauseMenuInputs => new PauseMenuInputsActions(this);
        public interface IFishingLevelInputsActions
        {
            void OnStartCast(InputAction.CallbackContext context);
            void OnStartReeling(InputAction.CallbackContext context);
            void OnSetPower(InputAction.CallbackContext context);
            void OnCast(InputAction.CallbackContext context);
            void OnStopReeling(InputAction.CallbackContext context);
            void OnCameraZoom(InputAction.CallbackContext context);
            void OnBucketMenu(InputAction.CallbackContext context);
            void OnBackpackMenu(InputAction.CallbackContext context);
            void OnMoveHook(InputAction.CallbackContext context);
        }
        public interface ITitleMenuInputActions
        {
            void OnSelect(InputAction.CallbackContext context);
            void OnNavigate(InputAction.CallbackContext context);
            void OnMouseMovement(InputAction.CallbackContext context);
            void OnBack(InputAction.CallbackContext context);
            void OnTabs(InputAction.CallbackContext context);
        }
        public interface IStoreMenuInputsActions
        {
            void OnNewaction(InputAction.CallbackContext context);
        }
        public interface IPauseMenuInputsActions
        {
            void OnNewaction(InputAction.CallbackContext context);
        }
    }
}
